<body onmouseup="mouseup()">
<div id="lifeDiv" style='width:600px; margin:0 auto;margin-top:0.5%;'>
  <canvas id="lifeGrid" width="600" height="600" onmousemove="setlives(event)" onmousedown="mouseon(event)">
    <p>Your browser does not support the canvas element</p>
  </canvas>
  <button type="button" class="btn btn-primary btn-lg btn-block" onclick="Start()">Start</button>
</div>
</body>
<script>
const speed=70,//ms
      size=5,//size of pixel
      lifeColor='LightSeaGreen',
      mapColor='WhiteSmoke';
var canvas,context,lives,cols,rows;
var gamestarted=0,mouse=0;//flag
window.onload = init;

function init(){
  canvas = document.getElementById("lifeGrid");
  canvas.style.cssText = "border:1px solid;border-radius:3px;color:SlateGray";
  if(screen.width<500){
    div = document.getElementById("lifeDiv");
    div.style.cssText = "width:400px; margin:0 auto;margin-top:0.5%;";
    canvas.setAttribute("width", 400);
    canvas.setAttribute("height", 400);
  }
  context = canvas.getContext("2d"),
  rows=context.canvas.height/size;
  cols=context.canvas.width/size;
  lives=new Array(rows * cols);
  for(var i=0;i<lives.length;i++)
    lives[i]=0;
  draw(1,mapColor,lifeColor);
}

function mouseon(evt){
  mouse=1;
  setlives(evt);
}

function mouseup(){
  mouse=0;
}

function setlives(evt){
  if(gamestarted==0 && mouse==1){
     function getMousePos(canvas, evt) {
        var rect = canvas.getBoundingClientRect();
        var canvasX=Math.floor((evt.clientX - rect.left)/size);
        if(canvasX>=cols) canvasX=cols-1;
        return {
            x: canvasX,
            y: Math.floor((evt.clientY - rect.top)/size)
          };
      }
      var mousePos = getMousePos(canvas, evt);
      lives[mousePos.y*cols+mousePos.x]=1;
      draw(1,mapColor,lifeColor);
  }
}

function Start()
{
  if(gamestarted==0){
    gamestarted=1;
    gameoflife();
  }
}


function gameoflife(){
  updatelife(size,size,1,mapColor,lifeColor);
  setInterval(updatelife, speed);
}

function updatelife() {
  draw(1,mapColor,lifeColor);

  var templive=new Array(lives.length);
  for(var i = 0; i<lives.length; i += 1)
    templive[i]=lives[i];


  for(var y2=0;y2<rows;y2+=1){
      for(var x2=0;x2<cols;x2+=1){
        var lifeCount=0;
        if(y2-1>=0&&x2-1>=0 && templive[(y2-1)*cols+x2-1]>0)lifeCount++;
        if(y2-1>=0 && templive[(y2-1)*cols+x2]>0)lifeCount++;
        if(y2-1>=0&&x2+1<cols && templive[(y2-1)*cols+x2+1]>0)lifeCount++;
        if(x2+1<cols&&templive[y2*cols+x2+1]>0)lifeCount++;
        if(y2+1<rows&&x2+1<cols&&templive[(y2+1)*cols+x2+1]>0)lifeCount++;
        if(y2+1<rows&&templive[(y2+1)*cols+x2]>0)lifeCount++;
        if(y2+1<rows&&x2-1>=0&&templive[(y2+1)*cols+x2-1]>0)lifeCount++;
        if(x2-1>=0&&templive[y2*cols+x2-1]>0)lifeCount++;

        if((lifeCount<2||lifeCount>3)&&templive[y2*cols+x2]>0)lives[y2*cols+x2]=0;
        if(lifeCount==3&&templive[y2*cols+x2]==0)lives[y2*cols+x2]=1;
        }
  }
}

function draw(lineWidth, mapColor,lifeColor) {
  context.clearRect(0, 0, context.canvas.width, context.canvas.height);
  context.lineWidth = lineWidth;
  context.strokeStyle = mapColor;
  for(var i = size+0.5; i < context.canvas.height; i += size){
      context.beginPath();
      context.moveTo(0, i);
      context.lineTo(context.canvas.width, i);
      context.stroke();
  }

  for(var i = size+0.5; i < context.canvas.width; i += size){
      context.beginPath();
      context.moveTo(i, 0);
      context.lineTo(i, context.canvas.height);
      context.stroke();
  }

  context.fillStyle = lifeColor;
  for(var y=0;y<rows;y++){
      for(var x=0;x<cols;x++){
          if(lives[y*cols+x]==1){
              context.fillRect(x*size+1,y*size+1,size-1,size-1);
          }
      }
  }
}
</script>
